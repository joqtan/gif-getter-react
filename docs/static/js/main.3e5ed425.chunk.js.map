{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGif.js","components/GifGridItem.js","components/GifGrid.js","GifGetterApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","placeholder","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","response","json","data","gif","map","id","title","images","downsized_medium","useFetchGif","loading","state","setState","useEffect","then","img","GifGridItem","className","src","alt","GifGrid","GifGetterApp","ReactDOM","render","document","getElementById"],"mappings":"uMA8BeA,EA3BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACHC,mBAAS,IADN,mBAChCC,EADgC,KACpBC,EADoB,KAYvC,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,MAIlB,SACI,uBACIO,YAAY,yBACZC,KAAK,OACLC,MAAOV,EACPW,SAhBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,a,+BCNlBG,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACZC,EADY,iDACoCC,UAClDH,GAFc,8DAIKI,MAAMF,GAJX,cAIZG,EAJY,gBAKKA,EAASC,OALd,uBAKVC,EALU,EAKVA,KACFC,EAAMD,EAAKE,KAAI,YACjB,MAAO,CACHC,GAFwC,EAAxBA,GAGhBC,MAHwC,EAApBA,MAIpBT,IAJwC,EAAbU,OAIfC,iBAAiBX,QAVnB,kBAaXM,GAbW,4CAAH,sDCoBJM,EAjBK,SAACd,GAAc,IAAD,EACJf,mBAAS,CAC/BsB,KAAM,GACNQ,SAAS,IAHiB,mBACvBC,EADuB,KAChBC,EADgB,KAc9B,OATAC,qBAAU,WACNnB,EAAOC,GAAUmB,MAAK,SAACC,GACnBH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAGlB,CAACf,IAEGgB,GCCIK,G,MAdK,SAAC,GAAoB,IAAlBV,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAC1B,OACI,sBAAKoB,UAAU,+CAAf,UACI,qBAAKC,IAAKrB,EAAKsB,IAAKb,IACpB,4BAAIA,SCiBDc,EApBC,SAAC,GAAkB,IAAhBzB,EAAe,EAAfA,SAAe,EACJc,EAAYd,GAA9BO,EADsB,EACtBA,KAAMQ,EADgB,EAChBA,QAEd,OACI,qCACI,oBAAIO,UAAU,mCAAd,SAAkDtB,IACjDe,GAAW,gDACZ,qBAAKO,UAAU,YAAf,SACKf,EAAKE,KAAI,SAACW,GAAD,OACN,cAAC,EAAD,eAA8BA,GAAZA,EAAIV,aCQ3BgB,EAlBM,WAAM,MAEazC,mBAAS,CAAC,aAFvB,mBAEhBQ,EAFgB,KAEJT,EAFI,KAIvB,OACI,qCACI,4CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACKS,EAAWgB,KAAI,SAACT,GAAD,OACZ,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCVlC2B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.3e5ed425.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (inputValue.trim().length > 0) {\r\n            setCategories((categories) => [inputValue, ...categories])\r\n            setInputValue('')\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                placeholder='type a new category...'\r\n                type='text'\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\nexport default AddCategory\r\n","export const getGif = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n        category\r\n    )}&limit=5&api_key=2UaWNRO3gfbTk5hboWcAgvbIJQeIwLLL`\r\n    const response = await fetch(url)\r\n    const { data } = await response.json()\r\n    const gif = data.map(({ id, title, images }) => {\r\n        return {\r\n            id,\r\n            title,\r\n            url: images.downsized_medium.url,\r\n        }\r\n    })\r\n    return gif\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGif } from '../helpers/getGifs'\r\n\r\nconst useFetchGif = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    })\r\n    useEffect(() => {\r\n        getGif(category).then((img) => {\r\n            setState({\r\n                data: img,\r\n                loading: false,\r\n            })\r\n        })\r\n    }, [category])\r\n\r\n    return state\r\n}\r\n\r\nexport default useFetchGif\r\n","import React from 'react'\r\nimport 'animate.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n    return (\r\n        <div className='card animate__animated animate__fadeInUpBig '>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default GifGridItem\r\n","// import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport useFetchGif from '../hooks/useFetchGif'\r\nimport GifGridItem from './GifGridItem'\r\n\r\nconst GifGrid = ({ category }) => {\r\n    const { data, loading } = useFetchGif(category)\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__jello'>{category}</h3>\r\n            {loading && <p>loading data...</p>}\r\n            <div className='card-grid'>\r\n                {data.map((img) => (\r\n                    <GifGridItem key={img.id} {...img} />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string,\r\n}\r\n\r\nexport default GifGrid\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid'\r\n\r\nconst GifGetterApp = () => {\r\n    // const categories = ['landscape', 'cityscape', 'urbanscape']\r\n    const [categories, setCategories] = useState(['starwars'])\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif Getter</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            <ol>\r\n                {categories.map((category) => (\r\n                    <GifGrid key={category} category={category} />\r\n                ))}\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGetterApp\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport GifGetterApp from './GifGetterApp'\nimport './index.css'\n\nReactDOM.render(<GifGetterApp />, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}